pipeline {
    agent any

    environment {
        PROD_USERNAME = 'amedikusettor'
        PROD_SERVER = '35.239.170.49'
        PROD_DIR = '/home/amedikusettor/mongodb'  // Change the directory accordingly
        DOCKER_IMAGE_NAME = 'mongodb-deployment'
        DOCKER_CONTAINER_NAME = 'mongodb'
        DOCKER_CONTAINER_PORT = '27017'
        DOCKER_HOST_PORT = '27017'
    }

    stages {
        stage('Load Code to Workspace') {
            steps {
                checkout scm
            }
        }

        stage('Deploy Repo to Prod. Server') {
            steps {
                script {
                    sh 'echo Packaging files ...'
                    sh 'tar -czf mongodb.tar.gz *'
                    sh "scp -o StrictHostKeyChecking=no mongodb.tar.gz ${PROD_USERNAME}@${PROD_SERVER}:${PROD_DIR}"
                    sh 'echo Files transferred to server. Unpacking ...'
                    sh "ssh -o StrictHostKeyChecking=no ${PROD_USERNAME}@${PROD_SERVER} 'pwd && cd mongodb && tar -xzf mongodb.tar.gz && ls -l'"
                    sh 'echo Repo unloaded on Prod. Server. Preparing to dockerize application ..'
                }
            }
        }

        stage('Dockerize DB Application') {
            steps {
                script {
                    // Build MongoDB Docker image
                    sh "ssh -o StrictHostKeyChecking=no ${PROD_USERNAME}@${PROD_SERVER} 'cd mongodb && docker build -t ${DOCKER_IMAGE_NAME} .'"
                    echo 'Docker image for MongoDB built. Preparing to redeploy container to web...'
                }
            }
        }

        stage('Redeploy Container') {
            steps {
                script {
                    // Stop and remove existing MongoDB container
                    sh "ssh -o StrictHostKeyChecking=no ${PROD_USERNAME}@${PROD_SERVER} 'cd mongodb && docker stop ${DOCKER_CONTAINER_NAME} || true'"
                    sh "ssh -o StrictHostKeyChecking=no ${PROD_USERNAME}@${PROD_SERVER} 'cd mongodb && docker rm ${DOCKER_CONTAINER_NAME} || true'"
                    echo 'Container stopped and removed. Preparing to redeploy new version'

                    // Run the MongoDB container
                    sh "ssh -o StrictHostKeyChecking=no ${PROD_USERNAME}@${PROD_SERVER} 'cd mongodb && ./deploy-mongo.sh'"
                    echo 'MongoDB Microservice Deployed!'
                }
            }
        }
    }
}
